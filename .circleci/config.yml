# asyncqlio CircleCI configuration.

# To add a new backend test, add a new job, and run tox with `tox -e py35-{...}, py36-{...}` and
# so on.
version: 2
jobs:
  "postgres-asyncpg":
    docker:
      # this image has python 3.4/3.5/3.6 etc all installed
      - image: themattrix/tox
        environment:
          ASQL_DSN: "postgresql+asyncpg://asql@127.0.0.1/asqltest"

      # this config uses postgres for configuration
      - image: circleci/postgres:latest
        environment:
          POSTGRES_USER: asql
          POSTGRES_DB: asqltest
          POSTGRES_PASSWORD: ""

    working_directory: ~/asyncqlio
    steps:
      - run:
          name: Install git
          command: apt update && apt install git -y

      - checkout
      - run:
          name: Install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0

      - run:
          name: Wait for Postgres to be ready
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Run tests via tox
          command: |
            tox -e py36-postgres_asyncpg

  "mysql-aiomysql":
    docker:
      # this image has python 3.4/3.5/3.6 etc all installed
      - image: themattrix/tox
        environment:
          ASQL_DSN: "mysql+aiomysql://root:no@127.0.0.1/asqltest"

      - image: circleci/mysql:latest
        environment:
          MYSQL_DATABASE: asqltest
          MYSQL_ROOT_PASSWORD: "no"

    working_directory: ~/asyncqlio
    steps:
      - run:
          name: Install git
          command: apt update && apt install git -y

      - checkout
      - run:
          name: Install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0

      - run:
          name: Wait for MySQL to be ready
          command: dockerize -wait tcp://localhost:3306 -timeout 1m

      - run:
          name: Run tests via tox
          command: |
            tox -e py36-mysql_aiomysql

  "sqlite3-sqlite3":
    docker:
      # this image has python 3.4/3.5/3.6 etc all installed
      - image: themattrix/tox
        environment:
          ASQL_DSN: "sqlite3:///test.db"

    working_directory: ~/asyncqlio
    steps:
      - run:
          name: Install git
          command: apt update && apt install git -y

      - checkout

      - run:
          name: Run tests via tox
          command: |
              tox -e py36-sqlite3_sqlite3

workflows:
  version: 2
  build:
    jobs:
      - "postgres-asyncpg"
      - "mysql-aiomysql"
      - "sqlite3-sqlite3"
